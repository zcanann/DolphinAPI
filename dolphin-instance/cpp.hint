#define INSTANCE_FUNC(Name) virtual void DolphinInstance_ ## Name(const ToInstanceParams_ ## Name& params ## Name) { NOT_IMPLEMENTED(); }
#define INSTANCE_FUNC_OVERRIDE(Name) virtual void DolphinInstance_ ## Name(const ToInstanceParams_ ## Name& params ## Name) override;
#define INSTANCE_FUNC_BODY(Class, Name, params) void Class::DolphinInstance_ ## Name(const ToInstanceParams_ ## Name& params)
#define SERVER_FUNC(Name) virtual void DolphinServer_ ## Name(const ToServerParams_ ## Name& params ## Name) { NOT_IMPLEMENTED(); }
#define SERVER_FUNC_OVERRIDE(Name) virtual void DolphinServer_ ## Name(const ToServerParams_ ## Name& params ## Name) override;
#define SERVER_FUNC_BODY(Class, Name, params) void Class::DolphinServer_ ## Name(const ToServerParams_ ## Name& params)

#define NOT_IMPLEMENTED() std::cout << "CALLED UNIMPLEMENTED HANDLER FUNC" << std::endl;
#define CREATE_TO_INSTANCE_DATA(IpcCall, IpcVariableName, VariableName) \
	DolphinIpcToInstanceData IpcVariableName; \
	static std::shared_ptr<ToInstanceParams_ ## IpcCall> ##VariableName = std::make_shared<ToInstanceParams_ ## IpcCall>(); \
	IpcVariableName._call = DolphinInstanceIpcCall::DolphinInstance_ ## IpcCall; \
	IpcVariableName._params._params ## IpcCall = ##VariableName;
#define CREATE_TO_SERVER_DATA(IpcCall, IpcVariableName, VariableName) \
	DolphinIpcToServerData IpcVariableName; \
	static std::shared_ptr<ToServerParams_ ## IpcCall> ##VariableName = std::make_shared<ToServerParams_ ## IpcCall>(); \
	IpcVariableName._call = DolphinServerIpcCall::DolphinServer_ ## IpcCall; \
	IpcVariableName._params._params ## IpcCall = ##VariableName;

#define TO_INSTANCE_MEMBER(Name) std::shared_ptr<ToInstanceParams_##Name> _params ## Name;
#define TO_INSTANCE_ARCHIVE(Name) case DolphinInstanceIpcCall::DolphinInstance_ ## Name: \
	{ \
		if (!_params._params ## Name) \
		_params._params ## Name = std::make_shared<ToInstanceParams_##Name>(); \
		ar(*(_params._params ## Name)); \
		break; \
	}

	
#define TO_SERVER_MEMBER(Name) std::shared_ptr<ToServerParams_##Name> _params ## Name;
#define TO_SERVER_ARCHIVE(Name) case DolphinServerIpcCall::DolphinServer_ ## Name: \
	{ \
		if (!_params._params ## Name) \
		_params._params ## Name = std::make_shared<ToServerParams_##Name>(); \
		ar(*(_params._params ## Name)); \
		break; \
	}
